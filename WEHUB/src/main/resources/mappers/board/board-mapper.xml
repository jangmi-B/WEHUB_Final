<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.kh.wehub.board.model.dao.BoardDao">
	<sql id="noticeListSql">
		SELECT N.NOTICE_NO,
		       N.NOTICE_WRITER_NO,
		       M.USER_NAME, 
		       N.NOTICE_TITLE, 
		       N.NOTICE_CONTENT, 
		       N.NOTICE_ORIGINAL_FILENAME, 
		       N.NOTICE_READCOUNT,
		       N.NOTICE_CREATE_DATE,
		       N.NOTICE_MODIFY_DATE,
		       N.STATUS
		FROM NOTICE N
		JOIN MEMBER M ON(N.NOTICE_WRITER_NO = M.USER_NO)
		WHERE N.STATUS='Y'	
	</sql>

	<resultMap type="Notice" id="noticeResultMap">
		<id property="noticeNo" column="NOTICE_NO"/>
		<result property="noticeTitle" column="NOTICE_TITLE"/>
		<result property="noticeWriterNo" column="NOTICE_WRITER_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="noticeUserName" column="USER_NAME"/>
		<result property="noticeContent" column="NOTICE_CONTENT"/>
		<result property="noticeOriginalFileName" column="NOTICE_ORIGINAL_FILENAME"/>
		<result property="noticeRenamedFileName" column="NOTICE_RENAMED_FILENAME"/>
		<result property="noticeReadCount" column="NOTICE_READCOUNT"/>
		<result property="status" column="STATUS"/>
		<result property="noticeCreateDate" column="NOTICE_CREATE_DATE"/>	
		<result property="noticeModifyDate" column="NOTICE_MODIFY_DATE"/>	
	</resultMap>
	
	<resultMap type="Notice" id="noticeDetailResultMap">
		<id property="noticeNo" column="NOTICE_NO"/>
		<result property="noticeTitle" column="NOTICE_TITLE"/>
		<result property="noticeWriterNo" column="NOTICE_WRITER_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="noticeUserName" column="USER_NAME"/>
		<result property="noticeContent" column="NOTICE_CONTENT"/>
		<result property="department" column="DEPT_NAME"/>
		<result property="noticeOriginalFileName" column="NOTICE_ORIGINAL_FILENAME"/>
		<result property="noticeRenamedFileName" column="NOTICE_RENAMED_FILENAME"/>
		<result property="noticeReadCount" column="NOTICE_READCOUNT"/>
		<result property="status" column="STATUS"/>
		<result property="noticeCreateDate" column="NOTICE_CREATE_DATE"/>
		<result property="noticCommentCount" column="COMMENTCOUNT"/>
		<collection property="comments" javaType="java.util.ArrayList" resultMap="noticeCommentResultMap"/>	
	</resultMap>
	
	<resultMap type="Comments" id="noticeCommentResultMap">
		<id property="commentNo" column="COMMENT_NO"/>
		<result property="commentNoticeNO" column="COMMENT_NOTICE_NO"/>
		<result property="commentContent" column="COMMENT_CONTENT"/>
		<result property="status" column="R_STATUS"/>
		<result property="commentCreateDate" column="COMMENT_CREATE_DATE"/>
		<result property="commentModifyDate" column="COMMENT_MODIFY_DATE"/>
	</resultMap>

	<select id="selectNoticeList" parameterType="map" resultMap="noticeResultMap">
	SELECT * FROM (
		SELECT N.NOTICE_NO,
		       N.NOTICE_WRITER_NO,
		       M.USER_NAME, 
		       N.NOTICE_TITLE, 
		       N.NOTICE_CONTENT, 
		       N.NOTICE_ORIGINAL_FILENAME, 
		       N.NOTICE_READCOUNT,
		       N.NOTICE_CREATE_DATE,
		       N.NOTICE_MODIFY_DATE,
		       N.STATUS,
		       (SELECT COUNT(*)
		       FROM COMMENTS
		       WHERE COMMENT_NOTICE_NO = NOTICE_NO )AS COMMENTCOUNT
		FROM NOTICE N
		JOIN MEMBER M ON(N.NOTICE_WRITER_NO = M.USER_NO)
		WHERE N.STATUS='Y'
		<choose>
			<when test="searchList != 'null'">
				AND N.NOTICE_TITLE LIKE '%'|| #{searchText} ||'%'
				OR N.NOTICE_CONTENT LIKE '%'|| #{searchText} ||'%'
			</when>
		</choose>	
		ORDER BY N.NOTICE_NO DESC) A
	</select>
	
	<select id="commentCount" resultType="_int">
		SELECT COUNT(*) 
		FROM COMMENTS
		WHERE COMMENT_NOTICE_NO=#{NOTICE_NO}
	</select>
	
	<select id="noticeCount" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM NOTICE N
		WHERE STATUS='Y'
		<choose>
			<when test="searchList != 'null'">
				AND N.NOTICE_TITLE LIKE '%'|| #{searchText} ||'%'
				OR N.NOTICE_CONTENT LIKE '%'|| #{searchText} ||'%'
			</when>
		</choose>
	</select>
	
	<insert id="insertNotice" parameterType="map"
  		useGeneratedKeys="true" keyProperty="noticeNo" keyColumn="NOTICE_NO">
  		
  		INSERT INTO NOTICE 
  		VALUES(
  			SEQ_NOTICE_NO.NEXTVAL,
  			#{noticeWriterNo},
  			#{noticeTitle},
  			#{noticeContent},
  			#{noticeOriginalFileName},
  			#{noticeRenamedFileName},
  			DEFAULT,
  			DEFAULT,
  			DEFAULT,
  			DEFAULT
 		)
  	</insert>
  	
	<update id="updateNotice" parameterType="Notice">
		UPDATE NOTICE 
		SET 
			NOTICE_TITLE=#{noticeTitle},
			NOTICE_CONTENT=#{noticeContent},
			<if test="noticeOriginalFileName != null">
				NOTICE_ORIGINAL_FILENAME=#{noticeOriginalFileName},
			</if>
			<if test="noticeRenamedFileName != null">
				NOTICE_RENAMED_FILENAME=#{noticeRenamedFileName},
			</if>
			NOTICE_MODIFY_DATE=SYSDATE 
		WHERE 
			NOTICE_NO=#{noticeNo}
	</update>
	
	<update id="deleteNotice" parameterType="Notice">
		UPDATE NOTICE 
		SET 
			STATUS='N'
		WHERE 
			NOTICE_NO=#{noticeNo}
	</update>
	
	<select id="selectNoticeDetail" parameterType="_int" resultMap="noticeDetailResultMap">
		SELECT N.NOTICE_NO,
		       N.NOTICE_WRITER_NO,
		       M.USER_NAME, 
		       N.NOTICE_TITLE, 
		       N.NOTICE_CONTENT, 
		       N.NOTICE_ORIGINAL_FILENAME,
		       N.NOTICE_RENAMED_FILENAME,
		       N.NOTICE_READCOUNT,
		       N.NOTICE_CREATE_DATE,
		       N.NOTICE_MODIFY_DATE,
		       N.STATUS,
		       M.DEPT_CODE,
       		   D.DEPT_NAME,
		       C.COMMENT_NO, 
		       C.COMMENT_CONTENT, 
		       C.COMMENT_WRITER_NO, 
		       C.COMMENT_NOTICE_NO, 
		       M.USER_ID,
		       C.COMMENT_CREATE_DATE, 
		       C.COMMENT_MODIFY_DATE
		FROM NOTICE N
		JOIN MEMBER M ON(N.NOTICE_WRITER_NO = M.USER_NO)
		LEFT OUTER JOIN DEPARTMENT D ON(M.DEPT_CODE = D.DEPT_CODE)
		LEFT OUTER JOIN COMMENTS C ON(C.COMMENT_NOTICE_NO = N.NOTICE_NO)
		WHERE N.STATUS='Y' AND NOTICE_NO =#{noticeNo}
		ORDER BY N.NOTICE_NO DESC
	</select>	 		
	 
</mapper>